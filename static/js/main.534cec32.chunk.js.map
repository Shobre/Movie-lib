{"version":3,"sources":["Components/HOC.jsx","Components/ResultContainer/Results.component.jsx","Components/Thumbnails/Thumbnail.component.jsx","Components/SearchResults/SearchResults.component.jsx","Components/AddPageBtns/AddPageBtns.jsx","Pages/FirstPage.jsx","api.jsx","Components/PreviousPage/PrevPage.component.jsx","Pages/MoviePage.jsx","Components/Season/Season.component.jsx","Pages/SeriesPage.jsx","Pages/EpisodePage.jsx","Main.jsx","Components/Input/Input.component.jsx","Components/Button/Button.component.jsx","Components/Search/Search.component.jsx","App.js","serviceWorker.js","index.js"],"names":["WrappedComponent","Results","props","react_default","a","createElement","className","children","Thumbnail","_ref","Key","Title","Url","Year","Type","onClick","to","Link","key","type","src","alt","SearchResults","addResults","_results","_this","movieInfo","map","movie","i","Thumbnail_component_Thumbnail","imdbID","Poster","error","console","log","this","Component","WrappedResults","_Component","Hoc","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","value","AddPageBtn","generateBtns","_pageBtn","_pageBtnAmount","Math","round","totalRes","push","changePage","FirstPage","AddPageBtns","Results_component_Results","SearchResults_component","API_URL","searchMovies","page","fetch","concat","then","resp","json","data","catch","e","searchSeries","series","getMovie","id","getSeries","getSeason","season","getEpisode","PrevLink","MoviePage","componentDidMount","match","params","setState","location","pathname","PrevPage_component_PrevLink","prevPage","Runtime","Genre","imdbRating","Plot","Director","Actors","Released","DVD","BoxOffice","Season","createEpisodeList","_episodeList","episodes","episode","SeriesPage","seriesInfo","selectedSeason","seasonInfo","Episodes","createSeasonLink","_seasonLinks","totalSeasons","selectSeason","style","margin","showSeason","Season_component","bind","assertThisInitialized","_this2","target","EpisodePage","episodeInfo","Main","pageNum","BrowserRouter","Switch","Route","exact","path","render","Pages_FirstPage","assign","component","Input","text","onChange","disabled","Button","WrappedSearch","Input_component_Input","Button_component_Button","App","getMovies","Search","totalResults","input","toggle","selected","typeList","handleChange","handleSubmit","Toggle","switchPage","handleKeyPress","_onSelect","document","addEventListener","removeEventListener","option","label","event","keyCode","preventDefault","prevState","dist_default","options","placeholder","Search_component","src_Main","Boolean","window","hostname","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.534cec32.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\n\n\n\nexport const SearchWrapper = (WrappedComponent) => {\n    class Hoc extends Component {\n        constructor(props){\n            super(props)\n            this.state = {\n            }\n        }\n\n\n        render() {\n            return <WrappedComponent {...this.props}/>;\n        }\n    }\n    return Hoc\n}","import React from 'react';\nimport './Results.css';\n\nexport const Results = (props) => (\n     <div className=\"Results\"> {props.children}</div>\n)\n","import React from \"react\";\nimport './Thumbnail.css'\nimport {Link} from 'react-router-dom'\n\nexport const Thumbnail = ({ Key, Title, Url, Year, Type, onClick, to }) => (\n    <Link key={Key} to={to}>\n    <div className=\"Thumbnail\" type={Type} onClick={onClick}>\n        <img src={Url} alt=\"No poster found!\" />\n        <h1>{Title}</h1>\n        <p>{Year}</p>\n    </div>\n    </Link >\n);","import React, { Component } from 'react';\nimport './SearchResults.css'\nimport { SearchWrapper } from '../HOC';\nimport { Thumbnail } from '../Thumbnails/Thumbnail.component'\n\nclass SearchResults extends Component{\n\n    addResults = () => {\n        let _results = [];\n        try {\n            _results = this.props.movieInfo.map((movie, i) => {\n                return (<Thumbnail \n                            key={i} \n                            to={movie.Type + \"/\" + movie.imdbID}\n                            Title={movie.Title}\n                            Url={movie.Poster}\n                            Year={movie.Year}\n                            Type={movie.Type}\n                        />\n                );\n            });\n        } catch (error) {\n            console.log(error);\n            return <h1>No results...</h1>;\n        }\n\n        return _results;\n    };\n    \n    render() {\n        console.log(this.props.movieInfo)\n        return <div className=\"SearchResults\">{this.addResults()}</div>\n    }\n}\n\nconst WrappedResults = SearchWrapper(SearchResults)\n\nexport default WrappedResults","import React, { Component } from 'react'\n\nclass AddPageBtn extends Component {\n  \n    generateBtns = () => {\n        console.log(this.props)\n        let _pageBtn = [];\n        let _pageBtnAmount = Math.round((this.props.totalRes + 0.4) / 100);\n        try {\n            for (let i = 0; i < _pageBtnAmount; i++) {\n                _pageBtn.push(\n                    <button key={i} onClick={this.props.changePage} value={i + 1}>\n                        {i + 1}\n                    </button>\n                );\n            }\n            return _pageBtn;\n        } catch (error) {\n            console.log(error);\n            return <h1>No results...</h1>;\n        }\n    }\n  \n    render() { return this.generateBtns()}\n};\n\nexport default AddPageBtn\n","import React, { Component } from \"react\";\nimport {Results} from \"../Components/ResultContainer/Results.component\";\nimport WrappedResults from '../Components/SearchResults/SearchResults.component'\nimport AddPageBtn from \"../Components/AddPageBtns/AddPageBtns\";\n\nclass FirstPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n  }\n  render() {\n    console.log(this.props.totalRes)\n    return <div>\n        <div className=\"pageBtnContainer\">\n          <AddPageBtn totalRes={this.props.totalRes} changePage={this.props.changePage}/>\n          </div>\n      <Results><WrappedResults movieInfo={this.props.movieInfo}/></Results>\n      </div>;\n  }\n}\n\nexport default FirstPage;\n","const API_KEY = process.env.REACT_APP_OMDB_API_KEY;\nconst API_URL = \"http://www.omdbapi.com/?apikey=\" + API_KEY + \"&\";\n\nexport const searchMovies = ( movie, page ) => {\n    return fetch(API_URL + `type=movie&s=${movie}&page=${page}`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n            return data\n        })\n        .catch(e => {\n            console.log(e)\n            return null\n        })\n}\n\nexport const searchSeries = ( series, page ) => {\n    return fetch(API_URL + `type=series&s=${series}&page=${page}`)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        return data;\n      })\n      .catch(e => {\n        console.log(e);\n        return null;\n      });\n}\n\nexport const getMovie = ( id ) => {\n    return fetch(API_URL + `type=movie&i=${id}&plot=full`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data);\n            return data\n        }).catch(e => {\n            console.log(e)\n            return null\n        });\n}\n\nexport const getSeries = ( id ) => {\n    return (fetch(API_URL + `type=series&i=${id}&plot=full`))\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data);\n            return data\n        })\n        .catch(e => {\n            console.log(e)\n            return null\n        });\n}\n\nexport const getSeason = ( id, season ) => {\n    return fetch(API_URL + `type=series&i=${id}&Season=${season}&plot=full`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n            return data\n        }).catch(e => {console.log(e)\n        return null});\n}\n\nexport const getEpisode = ( id ) => {\n    return fetch(API_URL + `type=episode&i=${id}&plot=full`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data);\n            return data\n        }).catch(e => {console.log(e)\n        return null});\n}\n","import React from \"react\";\nimport \"./PrevPage.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const PrevLink = ( props ) => (\n  <Link className=\"PrevLink\" to={ props.to }>\n    {props.children}\n  </Link>\n);\n","import React, { Component } from 'react';\nimport { getMovie } from '../api'\nimport { PrevLink } from '../Components/PreviousPage/PrevPage.component';\nimport './Pages.css'\n\nclass MoviePage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movieInfo: []\n    }\n  }\n\n  componentDidMount = () => {\n    getMovie(this.props.match.params.id).then(movie => {\n      this.setState({ movieInfo: movie });\n    });\n  }\n\n  render() {\n    const movie = this.state.movieInfo;\n    console.log(this.props.location.pathname)\n    return <div className=\"MoviePage\">\n        <PrevLink to={\"/\"} prevPage={this.props.location.pathname}>\n          {\"<<< BACK <<<\"}\n        </PrevLink>\n        <div className=\"InfoLayout\">\n          <div className=\"row mobile\">\n            <div className=\"column\">\n              <img src={movie.Poster} alt=\"\" />\n            </div>\n            <div className=\"column\">\n              <h1 className=\"\">{movie.Title}</h1>\n              <div className=\"row\">\n                <h3>{movie.Runtime}</h3>\n                <h3>|</h3>\n                <h3>{movie.Year}</h3>\n                <h3>|</h3>\n                <h3>{movie.Genre}</h3>\n                <h3>|</h3>\n                <h3>{movie.imdbRating}</h3>\n              </div>\n              <p>{movie.Plot}</p>\n              <div className=\"row bottom\">\n                <h3>{movie.Director}</h3>\n                <h3>|</h3>\n                <h3>{movie.Actors}</h3>\n              <h3>|</h3>\n                <h3>{movie.Released}</h3>\n              <h3>|</h3>\n                <h3>{movie.DVD}</h3>\n              <h3>|</h3>\n                <h3>{movie.BoxOffice}</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}\n\nexport default MoviePage;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Season extends Component {\n  createEpisodeList = () => {\n      let _episodeList = []\n      try {\n          _episodeList = this.props.episodes.map((episode, i) => {\n              return <Link key={i} to={\"/Series/\" + this.props.id + \"/Season=\" + this.props.i + \"/Episode=\" + i + \"/\" + episode.imdbID}>\n                  <div className=\"\">\n                      <p>{episode.Title}</p>\n                  </div>\n              </Link>;\n          })\n      } catch (error) {\n          console.log(error)\n          return <div>No episodes...</div>\n      }\n      return _episodeList;\n  }\n\n  render() {\n    return (this.createEpisodeList()\n    );\n  }\n}\n\nexport default Season;\n","import React, { Component } from 'react'\nimport Season from '../Components/Season/Season.component'\nimport {Results} from '../Components/ResultContainer/Results.component'\nimport { getSeries, getSeason } from '../api';\nimport { PrevLink } from '../Components/PreviousPage/PrevPage.component'\n\nclass SeriesPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            seriesInfo: [],\n            selectedSeason: 1,\n            seasonInfo: [],\n            episodes: [],\n        };\n        this.selectSeason = this.selectSeason.bind(this);\n    }\n\n    componentDidMount = () => {\n        getSeries(this.props.match.params.id).then((series) => { this.setState({ seriesInfo: series }) })\n        getSeason(this.props.match.params.id, this.state.selectedSeason).then( series => {\n            this.setState({ seasonInfo: series, episodes: series.Episodes })\n        });\n    }\n\n    selectSeason(e) {\n        getSeason(this.props.match.params.id, e.target.value).then(series => {\n            this.setState({episodes: series.Episodes})\n        })\n        this.setState({ selectedSeason: e.target.value })\n    }\n\n    createSeasonLink = () => {\n        let _seasonLinks = []\n        for (let i = 0; i < this.state.seriesInfo.totalSeasons; i++) {\n            _seasonLinks.push(<button key={i} value={i+1} onClick={this.selectSeason} style={{ margin: 10 }}>\n                {i+1}\n              </button>);\n        }\n        return _seasonLinks\n    }\n\n    showSeason = () => {\n        return <div>\n            <h2>Season {this.state.selectedSeason}</h2>\n            <Season id={this.props.match.params.id} i={this.state.selectedSeason} episodes={this.state.episodes}/>\n          </div>;\n    }\n\n    render() {\n        const series = this.state.seriesInfo;\n        return <div className=\"SeriesPage\">\n            <PrevLink to={\"/\"} prevPage={this.props.location.pathname}>\n              {\"<<< BACK <<<\"}\n            </PrevLink>\n            <div className=\"InfoLayout\">\n              <div className=\"row mobile\">\n                <div className=\"column\">\n                  <img src={series.Poster} alt=\"\" />\n                </div>\n                <div className=\"column\">\n                  <h1 className=\"\">{series.Title}</h1>\n                  <div className=\"row\">\n                    <h3>{series.Runtime}</h3>\n                    <h3>|</h3>\n                    <h3>{series.Year}</h3>\n                    <h3>|</h3>\n                    <h3>{series.Genre}</h3>\n                    <h3>|</h3>\n                    <h3>{series.imdbRating}</h3>\n                  </div>\n                  <p>{series.Plot}</p>\n                  <div className=\"row bottom\">\n                    <h3>{series.Director}</h3>\n                            <h3>|</h3>\n                    <h3>{series.Actors}</h3>\n                            <h3>|</h3>\n                    <h3>{series.Released}</h3>\n                            <h3>|</h3>\n                    <h3>{series.DVD}</h3>\n                            <h3>|</h3>\n                    <h3>{series.BoxOffice}</h3>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row seasonLinks\">{this.createSeasonLink()}</div>\n            <Results>{this.showSeason()}</Results>\n          </div>;\n    }\n}\n\nexport default SeriesPage;","import React, { Component } from \"react\";\nimport { getEpisode } from \"../api\";\nimport { PrevLink } from '../Components/PreviousPage/PrevPage.component'\n\nclass EpisodePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      episodeInfo: []\n    };\n  }\n\n  componentDidMount = () => {\n    getEpisode(this.props.match.params.id).then((episode) => { this.setState({ episodeInfo: episode }) })\n  };\n\n  render() {\n    const episode = this.state.episodeInfo;\n    return <div className=\"EpisodePage\">\n        <PrevLink to={\"/Series/\" + this.props.match.params.id}>\n          {\"<<< BACK <<<\"}\n        </PrevLink>\n        <div className=\"InfoLayout\">\n          <div className=\"row mobile\">\n            <div className=\"column\">\n              <img src={episode.Poster} alt=\"\" />\n            </div>\n            <div className=\"column\">\n              <h1 className=\"\">{episode.Title}</h1>\n              <div className=\"row\">\n                <h3>{episode.Runtime}</h3>\n                <h3>|</h3>\n                <h3>{episode.Year}</h3>\n                <h3>|</h3>\n                <h3>{episode.Genre}</h3>\n                <h3>|</h3>\n                <h3>{episode.imdbRating}</h3>\n              </div>\n              <p>{episode.Plot}</p>\n              <div className=\"row bottom\">\n                <h3>{episode.Director}</h3>\n              <h3>|</h3>\n                <h3>{episode.Actors}</h3>\n              <h3>|</h3>\n                <h3>{episode.Released}</h3>\n              <h3>|</h3>\n                <h3>{episode.DVD}</h3>\n              <h3>|</h3>\n                <h3>{episode.BoxOffice}</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>;\n  }\n}\n\nexport default EpisodePage;\n","import React from 'react'\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\n// pages\nimport FirstPage from './Pages/FirstPage'\nimport MoviePage from './Pages/MoviePage'\nimport SeriesPage from './Pages/SeriesPage'\nimport EpisodePage from './Pages/EpisodePage'\n\nconst Main = ( {movieInfo, pageNum, totalRes, changePage} ) => {\n  return <main className=\"Main blackBg\">\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" render={(props) => <FirstPage {...props} movieInfo={movieInfo} pageNum={pageNum} totalRes={totalRes} changePage={changePage}/>} />\n        <Route exact path=\"/Movie/:id\" component={MoviePage}/>\n        <Route exact path=\"/Series/:id\" component={SeriesPage}/>\n        <Route exact path=\"/Series/:id/Season=:i/Episode=:e/:eid\" component={EpisodePage}/>\n      </Switch>\n    </BrowserRouter>\n  </main>\n};\n\nexport default Main","import React from \"react\";\nimport './Input.css';\n\nexport const Input = ({ text, onChange, disabled }) => (\n    <input\n        onChange={onChange}\n        disabled={disabled}\n        className=\"Input\"\n    >\n        {text}\n    </input>\n);","import React from \"react\";\nimport './Button.css'\n\nexport const Button = ({ text, onClick, disabled }) => (\n  <div\n    disabled={disabled}\n    onClick={onClick}\n    className=\"Button\"\n  >\n    {text}\n  </div>\n);\n\nexport const Toggle = ({ onClick, disabled, type}) => (\n  <div\n    disabled={disabled}\n    onClick={onClick}\n    className={type}\n  >\n    {type}\n  </div>\n);","import React, { Component } from 'react'\nimport {Input} from '../Input/Input.component'\nimport {Button} from '../Button/Button.component'\nimport \"react-dropdown/style.css\";\nimport './Search.css'\n\nclass SearchBar extends Component {\n\n\n\n\n    render(){\n        console.log(this.props)\n        return <div className={\"SearchBar\"}>\n            <Input onChange={this.props.onChange} />\n            <Button text=\"Search\" onClick={this.props.onClick} />\n          </div>;\n    }\n}\n\nconst WrappedSearch = SearchBar\n\nexport default WrappedSearch","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main'\nimport WrappedSearch from './Components/Search/Search.component'\nimport { searchMovies, searchSeries } from './api'\nimport Dropdown from \"react-dropdown\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      toggle: true,\n      movieInfo: [],\n      totalRes: \"\",\n      pageNum: \"1\",\n      type: \"Movies\",\n      selected: \"Movies\",\n      typeList: [\"Movies\",\"Series\"]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.Toggle = this.Toggle.bind(this);\n    this.switchPage = this.switchPage.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this._onSelect = this._onSelect.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n\n  _onSelect(option) {\n    console.log('You selected ', option.label)\n    this.setState({ selected: option })\n    console.log(this.state.selected)\n  }\n\n  \n\n  handleKeyPress(event) {\n    if (event.keyCode === 13) {\n      this.handleSubmit(event);\n    }\n  }\n\n  handleChange(event) {\n    console.log(event);\n    this.setState({ input: event.target.value });\n  }\n\n  handleSubmit(event) {\n    console.log(event);\n    this.state.selected === \"Movies\"\n      ? this.getMovies(this.state.input, this.state.pageNum)\n      : this.getSeries(this.state.input, this.state.pageNum);\n    event.preventDefault();\n  }\n\n  Toggle() {\n    this.setState(prevState => ({\n      toggle: !prevState.toggle,\n      type: this.state.toggle ? \"Series\" : \"Movies\"\n    }));\n  }\n\n  handleSelect(event) {\n    console.log(event)\n  }\n\n  getMovies = (movie, pageNum) => {\n    searchMovies(movie, pageNum).then(movie => {\n      this.setState({ movieInfo: movie.Search, totalRes: movie.totalResults });\n    });\n  };\n\n  getSeries = (series, pageNum) => {\n    searchSeries(series, pageNum).then(series => {\n      this.setState({\n        movieInfo: series.Search,\n        totalRes: series.totalResults\n      });\n    });\n  };\n\n  switchPage(event) {\n    this.getMovies(this.state.input, event.target.value);\n    this.setState({ pageNum: event.target.value });\n  }\n\n  render() {\n    return <div className=\"App\">\n        <header className=\"App-header greyBg\">\n          <Dropdown options={this.state.typeList} onChange={this._onSelect} value={this.state.typeList[0]} placeholder=\"Select an option\" />\n          <WrappedSearch onClick={this.handleSubmit} onChange={this.handleChange}/>\n        </header>\n        <Main className=\"blackBg\" pageNum={this.state.pageNum} movieInfo={this.state.movieInfo} totalRes={this.state.totalRes} changePage={this.switchPage} />\n        <footer className=\"greyBg\" />\n      </div>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}