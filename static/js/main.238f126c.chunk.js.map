{"version":3,"sources":["Components/Button/Button.component.jsx","Components/Input/Input.component.jsx","Components/ResultContainer/Results.component.jsx","Components/Thumbnails/Thumbnail.component.jsx","api.jsx","Pages/FirstPage/FirstPage.jsx","Pages/MoviePage/MoviePage.jsx","Components/Season/Season.component.jsx","Pages/SeriesPage/SeriesPage.jsx","Pages/SeriesPage/EpisodePage.jsx","Main.jsx","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","text","onClick","disabled","react_default","a","createElement","className","Toggle","_ref2","toggle","Input","onChange","Results","this","props","children","Component","Thumbnail","Key","Title","Url","Id","Type","key","type","src","alt","API_URL","searchMovies","movie","fetch","concat","then","resp","json","data","console","log","Search","catch","e","searchSeries","series","getMovie","id","getSeries","getSeason","season","getEpisode","FirstPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getMovies","state","input","setState","movieInfo","addResults","_results","map","i","Link","to","imdbID","Thumbnail_component_Thumbnail","Poster","error","handleChange","bind","assertThisInitialized","handleSubmit","event","target","value","preventDefault","prevState","Button_component_Toggle","Input_component_Input","Button_component_Button","Results_component","MoviePage","componentDidMount","match","params","style","alignSelf","position","left","Plot","Season","createEpisodeList","_episodeList","episodes","episode","SeriesPage","seriesInfo","selectedSeason","seasonInfo","Episodes","createSeasonLink","_seasonLinks","totalSeasons","push","selectSeason","margin","showSeason","Season_component","_this2","EpisodePage","episodeInfo","Main","BrowserRouter","Switch","Route","exact","path","component","App","src_Main","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.238f126c.chunk.js","sourcesContent":["import React from \"react\";\nimport './Button.css'\n\nexport const Button = ({ text, onClick, disabled }) => (\n  <div\n    disabled={disabled}\n    onClick={onClick}\n    className=\"Button\"\n  >\n    {text}\n  </div>\n);\n\nexport const Toggle = ({ text, onClick, disabled, toggle}) => (\n  <div\n    disabled={disabled}\n    onClick={onClick}\n    className={toggle}\n  >\n    {text}\n  </div>\n);","import React from \"react\";\nimport './Input.css';\n\nexport const Input = ({ text, onChange, disabled }) => (\n    <input\n        onChange={onChange}\n        disabled={disabled}\n        className=\"Input\"\n    >\n        {text}\n    </input>\n);","import React, { Component } from 'react';\nimport './Results.css';\n\nclass Results extends Component {\n  render() {\n    return <div className=\"Results\"> {this.props.children} </div>;\n  }\n}\n\nexport default Results;","import React from \"react\";\nimport './Thumbnail.css'\n\nexport const Thumbnail = ({ Key, Title, Url, Id, Type, onClick }) => (\n    <div key={Key} className=\"Thumbnail\" type={Type} onClick={onClick}>\n        <h1>{Title}</h1>\n        <img src={Url} alt=\"\" />\n        <p>{Id}</p>\n    </div>\n);","const API_KEY = process.env.REACT_APP_OMDB_API_KEY;\nconst API_URL = \"http://www.omdbapi.com/?apikey=\" + API_KEY + \"&\";\n\nexport const searchMovies = ( movie ) => {\n    return fetch(API_URL + `type=movie&s=${movie}`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data.Search)\n            return data.Search\n        })\n        .catch(e => {\n            console.log(e)\n            return null\n        })\n}\n\nexport const searchSeries = ( series ) => {\n    return fetch(API_URL + `type=series&s=${series}`)\n        .then(resp => resp.json())\n        .then(data => {\n        console.log(data.Search);\n        return data.Search;\n        })\n        .catch(e => {\n            console.log(e)\n            return null\n        });\n}\n\nexport const getMovie = ( id ) => {\n    return fetch(API_URL + `type=movie&i=${id}&plot=full`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data);\n            return data\n        }).catch(e => {\n            console.log(e)\n            return null\n        });\n}\n\nexport const getSeries = ( id ) => {\n    return (fetch(API_URL + `type=series&i=${id}&plot=full`))\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data);\n            return data\n        })\n        .catch(e => {\n            console.log(e)\n            return null\n        });\n}\n\nexport const getSeason = ( id, season ) => {\n    return fetch(API_URL + `type=series&i=${id}&Season=${season}&plot=full`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data)\n            return data\n        }).catch(e => {console.log(e)\n        return null});\n}\n\nexport const getEpisode = ( id ) => {\n    return fetch(API_URL + `type=episode&i=${id}&plot=full`)\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data);\n            return data\n        }).catch(e => {console.log(e)\n        return null});\n}\n","import React, { Component } from \"react\";\nimport { Button, Toggle } from \"../../Components/Button/Button.component\";\nimport { Input } from \"../../Components/Input/Input.component\";\nimport Results from \"../../Components/ResultContainer/Results.component\";\nimport { Thumbnail } from \"../../Components/Thumbnails/Thumbnail.component\";\nimport { Link } from \"react-router-dom\";\nimport { searchMovies, searchSeries } from '../../api'\n\nclass FirstPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      toggle: true,\n      movieInfo: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.Toggle = this.Toggle.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ input: event.target.value });\n  }\n\n  handleSubmit(event) {\n    this.state.toggle ? this.getMovies() : this.getSeries();\n    event.preventDefault();\n  }\n\n  Toggle() {\n    this.setState(prevState => ({\n      toggle: !prevState.toggle\n    }));\n  }\n\n  getMovies = () => {\n    searchMovies(this.state.input).then((movie) => { this.setState({ movieInfo: movie} )})\n  };\n\n  getSeries = () => {\n    searchSeries(this.state.input).then((series) => { this.setState({ movieInfo: series }) })\n  };\n\n  addResults = () => {\n    let _results = [];\n    try {\n      _results = this.state.movieInfo.map((movie, i) => {\n        return (\n          <Link key={i} to={movie.Type + \"/\" + movie.imdbID}>\n            <Thumbnail\n              Title={movie.Title}\n              Url={movie.Poster}\n              Id={movie.imdbID}\n              Type={movie.Type}\n            />\n          </Link>\n        );\n      });\n    } catch (error) {\n      console.log(error);\n      return <h1>No results...</h1>;\n    }\n\n    return _results;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Toggle\n          text={this.state.toggle ? \"Movies\" : \"Series\"}\n          onClick={this.Toggle}\n          toggle={this.state.toggle ? \"Movies\" : \"Series\"}\n        />\n        <Input onChange={this.handleChange} />\n        <Button text=\"Search\" onClick={this.handleSubmit} />\n        <Results>{this.addResults()}</Results>\n      </div>\n    );\n  }\n}\n\nexport default FirstPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMovie } from '../../api'\n\nclass MoviePage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            movieInfo: []\n        }\n    }\n\n    componentDidMount = () => {\n        getMovie(this.props.match.params.id).then(movie => {\n          this.setState({ movieInfo: movie });\n        });\n    }\n\n    render() {\n        const movie = this.state.movieInfo;\n        return (\n            <div>\n                <Link style={{ alignSelf: 'left', position: \"relative\", left: \"-500px\"}} to={\"/\"}>{\"<<< BACK <<<\"}</Link>\n                <h1>{movie.Title}</h1>\n                <img src={movie.Poster} alt=\"\"></img>\n                <p>{movie.Plot}</p>\n            </div>\n        );\n    }\n}\n\nexport default MoviePage;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Season extends Component {\n  createEpisodeList = () => {\n      let _episodeList = []\n      try {\n          _episodeList = this.props.episodes.map((episode, i) => {\n              return <Link key={i} to={\"/Series/\" + this.props.id + \"/Season=\" + this.props.i + \"/Episode=\" + i + \"/\" + episode.imdbID}>\n                  <div className=\"\">\n                      <h1>{episode.Title}</h1>\n                  </div>\n              </Link>;\n          })\n      } catch (error) {\n          console.log(error)\n          return <div>No episodes...</div>\n      }\n      return _episodeList;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.createEpisodeList()}\n      </div>\n    );\n  }\n}\n\nexport default Season;\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\"\nimport Season from '../../Components/Season/Season.component'\nimport Results from '../../Components/ResultContainer/Results.component'\nimport { getSeries, getSeason } from '../../api'\n\nclass SeriesPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            seriesInfo: [],\n            selectedSeason: 1,\n            seasonInfo: [],\n            episodes: [],\n        };\n        this.selectSeason = this.selectSeason.bind(this);\n    }\n\n    componentDidMount = () => {\n        getSeries(this.props.match.params.id).then((series) => { this.setState({ seriesInfo: series }) })\n        getSeason(this.props.match.params.id, this.state.selectedSeason).then( series => {\n            this.setState({ seasonInfo: series, episodes: series.Episodes })\n        });\n    }\n\n    selectSeason(e) {\n        getSeason(this.props.match.params.id, e.target.value).then(series => {\n            this.setState({episodes: series.Episodes})\n        })\n        this.setState({ selectedSeason: e.target.value })\n    }\n\n    createSeasonLink = () => {\n        let _seasonLinks = []\n        for (let i = 0; i < this.state.seriesInfo.totalSeasons; i++) {\n            _seasonLinks.push(<button key={i} value={i+1} onClick={this.selectSeason} style={{ margin: 10 }}>\n                {i+1}\n              </button>);\n        }\n        return _seasonLinks\n    }\n\n    showSeason = () => {\n        return <div>\n            <h1>Season {this.state.selectedSeason}</h1>\n            <Season id={this.props.match.params.id} i={this.state.selectedSeason} episodes={this.state.episodes}/>\n          </div>;\n    }\n\n    render() {\n        const series = this.state.seriesInfo;\n        return <div>\n            <Link style={{ alignSelf: \"left\", position: \"relative\", left: \"-500px\" }} to={\"/\"}>\n              {\"<<< BACK <<<\"}\n            </Link>\n            <h1>{series.Title}</h1>\n            <img src={series.Poster} alt=\"\" />\n            <p>{series.Plot}</p>\n            {this.createSeasonLink()}\n            <Results>\n              {this.showSeason()}\n            </Results>\n          </div>;\n    }\n}\n\nexport default SeriesPage;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getEpisode } from \"../../api\";\n\nclass EpisodePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      episodeInfo: []\n    };\n  }\n\n  componentDidMount = () => {\n    getEpisode(this.props.match.params.id).then((episode) => { this.setState({ episodeInfo: episode }) })\n  };\n\n  render() {\n    const episode = this.state.episodeInfo;\n    return (\n      <div>\n        <Link\n          style={{ alignSelf: \"left\", position: \"relative\", left: \"-500px\" }}\n                to={\"/Series/\" + this.props.match.params.id}\n        >\n          {\"<<< BACK <<<\"}\n        </Link>\n        <h1>{episode.Title}</h1>\n        <img src={episode.Poster} alt=\"\" />\n        <p>{episode.Plot}</p>\n      </div>\n    );\n  }\n}\n\nexport default EpisodePage;\n","import React from 'react'\nimport { Switch, Route, BrowserRouter } from \"react-router-dom\";\n\n// pages\nimport FirstPage from './Pages/FirstPage/FirstPage'\nimport MoviePage from './Pages/MoviePage/MoviePage'\nimport SeriesPage from './Pages/SeriesPage/SeriesPage'\nimport EpisodePage from \"./Pages/SeriesPage/EpisodePage\";\n\nconst Main = () => (\n  <main>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={FirstPage}/>\n        <Route exact path=\"/Movie/:id\" component={MoviePage}/>\n        <Route exact path=\"/Series/:id\" component={SeriesPage}/>\n        <Route exact path=\"/Series/:id/Season=:i/Episode=:e/:eid\" component={EpisodePage}/>\n      </Switch>\n    </BrowserRouter>\n  </main>\n);\n\nexport default Main","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main'\n\nclass App extends Component {\n\n  render() {\n    return <div className=\"App\">\n        <header className=\"App-header\">\n        <img src={\"https://png2.kisspng.com/sh/b3314051ab1bb7f1a65431e1929d9b92/L0KzQYm3UsA2N6ltj5H0aYP2gLBuTgBqa6RmiuY2cHjyhLE0kCR2bJp0ReV5YYLufLa0lQJidqR1eeRuboSwcrLqiBdzd6ZzfJ8AYUe7SYGAgsc1bJY3TpCBNEO0QYO3UcE2OWg9TaICNEe3R4mATwBvbz==/kisspng-picsart-photo-studio-sparkle-transparent-background-5a78907b74de26.6431120115178507474787.png\"} className=\"App-logo\" alt=\"\" />\n        </header>\n        <Main/>\n      </div>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}